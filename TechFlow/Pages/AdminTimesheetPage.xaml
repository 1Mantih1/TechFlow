<Page x:Class="TechFlow.Pages.AdminTimesheetPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:local="clr-namespace:TechFlow.Pages"
      Title="AdminTimesheetPage"
      Background="#1b2339">

    <Page.Resources>
        <SolidColorBrush x:Key="PrimaryColor" Color="#1b2339"/>
        <SolidColorBrush x:Key="SecondaryColor" Color="#1E293B"/>
        <SolidColorBrush x:Key="AccentColor" Color="#38BDF8"/>
        <SolidColorBrush x:Key="TextPrimary" Color="#E2E8F0"/>
        <SolidColorBrush x:Key="TextSecondary" Color="#94A3B8"/>
        <SolidColorBrush x:Key="HoverColor" Color="#334155"/>
        <SolidColorBrush x:Key="BorderColor" Color="#64748B"/>
        <SolidColorBrush x:Key="GridLineColor" Color="#334155"/>
        <SolidColorBrush x:Key="CellSelectionColor" Color="#3C4A5E"/>

        <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
            <Setter Property="Background" Value="{StaticResource SecondaryColor}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="Padding" Value="8 6"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="Border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="ContentPresenter"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Center"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" Value="{StaticResource HoverColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="{StaticResource SecondaryColor}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Padding" Value="8 0"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="true"
                                   Grid.ColumnSpan="2"
                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   Placement="Bottom">
                                <Border x:Name="DropDownBorder"
                                        Background="{StaticResource SecondaryColor}"
                                        BorderBrush="{StaticResource BorderColor}"
                                        BorderThickness="1"
                                        CornerRadius="0"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="Grid" RenderOptions.ClearTypeHint="Enabled">
                                            <ItemsPresenter x:Name="ItemsPresenter" 
                                                           KeyboardNavigation.DirectionalNavigation="Contained"
                                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                            <ToggleButton x:Name="ToggleButton"
                                         Background="{TemplateBinding Background}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         Grid.ColumnSpan="2"
                                         IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border x:Name="Border" 
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                SnapsToDevicePixels="true">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="20"/>
                                                </Grid.ColumnDefinitions>
                                                <ContentPresenter Content="{TemplateBinding Content}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  Margin="{TemplateBinding Padding}"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Path x:Name="Arrow"
                                                      Grid.Column="1"
                                                      Fill="{StaticResource TextSecondary}"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Data="M0,0 L4,4 8,0 Z"/>
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverColor}"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="{StaticResource HoverColor}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter TargetName="Border" Property="Background" Value="{StaticResource SecondaryColor}"/>
                                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BorderColor}"/>
                                                <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
                                                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource TextSecondary}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite"
                                             Content="{TemplateBinding SelectionBoxItem}"
                                             ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                             ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                             Margin="{TemplateBinding Padding}"
                                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,5,5"/>
                                <Setter TargetName="DropDownBorder" Property="Padding" Value="0,0,5,5"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DataGridComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="8,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <ContentPresenter x:Name="ContentSite"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            <ToggleButton x:Name="ToggleButton"
                                          Grid.Column="1"
                                          Background="Transparent"
                                          BorderBrush="Transparent"
                                          BorderThickness="0"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border x:Name="Border" 
                                                Background="Transparent"
                                                BorderBrush="Transparent"
                                                BorderThickness="0"
                                                SnapsToDevicePixels="true">
                                            <Path x:Name="Arrow"
                                                  Fill="{StaticResource TextSecondary}"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Data="M0,0 L4,4 8,0 Z"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource AccentColor}"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="true">
                                                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource AccentColor}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>

                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="true"
                                   Placement="Bottom"
                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <Border x:Name="DropDownBorder"
                                        Background="{StaticResource SecondaryColor}"
                                        BorderBrush="{StaticResource BorderColor}"
                                        BorderThickness="1"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <ItemsPresenter x:Name="ItemsPresenter" 
                                                         KeyboardNavigation.DirectionalNavigation="Contained"
                                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,5,5"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="IconStyle" TargetType="materialDesign:PackIcon">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="AccentIconStyle" TargetType="materialDesign:PackIcon" BasedOn="{StaticResource IconStyle}">
            <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
        </Style>

        <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
            <Setter Property="FontFamily" Value="Segoe UI Semibold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="BodyTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="SecondaryTextStyle" TargetType="TextBlock" BasedOn="{StaticResource BodyTextStyle}">
            <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
        </Style>

        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource SecondaryColor}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12 8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe UI Semibold"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="content" 
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource HoverColor}"/>
                                <Setter TargetName="content" Property="TextElement.Foreground" Value="{StaticResource AccentColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource SecondaryColor}"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="IconButtonStyle" TargetType="Button" BasedOn="{StaticResource PrimaryButtonStyle}">
            <Setter Property="Padding" Value="8"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="Width" Value="40"/>
        </Style>

        <Style x:Key="ModernDataGridStyle" TargetType="DataGrid">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="Cell"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="CanUserResizeColumns" Value="True"/>
            <Setter Property="CanUserResizeRows" Value="False"/>
            <Setter Property="CanUserSortColumns" Value="True"/>
            <Setter Property="IsReadOnly" Value="False"/>
            <Setter Property="AlternationCount" Value="2"/>
            <Setter Property="RowHeight" Value="60"/>
            <Setter Property="ColumnHeaderHeight" Value="40"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource GridLineColor}"/>
            <Setter Property="VerticalGridLinesBrush" Value="{StaticResource GridLineColor}"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
        </Style>

        <Style x:Key="ModernDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource SecondaryColor}"/>
            <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="12 8"/>
            <Setter Property="FontFamily" Value="Segoe UI Semibold"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Grid>
                            <Border x:Name="headerBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="contentPresenter"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="headerBorder" Property="Background" Value="{StaticResource HoverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="headerBorder" Property="Background" Value="{StaticResource SecondaryColor}"/>
                                <Setter TargetName="headerBorder" Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                                <Setter TargetName="headerBorder" Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BackButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#1E293B"/>
            <Setter Property="Foreground" Value="#94A3B8"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="12 8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe UI Semibold"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" 
                                Background="{TemplateBinding Background}"
                                CornerRadius="6"
                                SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="content" 
                                            Content="{TemplateBinding Content}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="Center"
                                            Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#334155"/>
                                <Setter TargetName="content" Property="TextElement.Foreground" Value="#38BDF8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernDataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridRow">
                        <Border x:Name="rowBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <SelectiveScrollingGrid>
                                <SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </SelectiveScrollingGrid.ColumnDefinitions>
                                <SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </SelectiveScrollingGrid.RowDefinitions>
                                <DataGridCellsPresenter Grid.Column="1"
                                                        ItemsPanel="{TemplateBinding ItemsPanel}"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <DataGridDetailsPresenter Grid.Column="1"
                                                          Grid.Row="1"
                                                          SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                          Visibility="{TemplateBinding DetailsVisibility}"/>
                                <DataGridRowHeader Grid.RowSpan="2"
                                                   SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                                   Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                            </SelectiveScrollingGrid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="AlternationIndex" Value="1">
                                <Setter Property="Background" Value="#1E293B"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ModernDataGridCellStyle" TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border x:Name="cellBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Stretch"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="cellBorder" Property="Background" Value="{StaticResource CellSelectionColor}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="cellBorder" Property="Background" Value="{StaticResource HoverColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
            <Setter Property="TextBlock.TextTrimming" Value="None"/>
        </Style>

        <Style x:Key="CustomEmployeeComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource ComboBoxStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="140"/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>

                            <!-- Текст выбранного элемента -->
                            <ContentPresenter x:Name="ContentSite"
                                    Grid.Column="0"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Margin="15,0,15,0"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            <!-- Область стрелки -->
                            <Border x:Name="ArrowBorder"
                            Grid.Column="1"
                            Background="Transparent"
                            CornerRadius="0,4,4,0">
                                
                                <ToggleButton x:Name="ToggleButton"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    BorderThickness="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Path x:Name="ArrowPath"
                                  Fill="{StaticResource TextSecondary}"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M0,0 L4,4 8,0 Z"/>
                                </ToggleButton>
                            </Border>

                            <Popup x:Name="PART_Popup"
                           AllowsTransparency="true"
                           Placement="Bottom"
                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                <Border x:Name="DropDownBorder"
                                Background="{StaticResource SecondaryColor}"
                                BorderBrush="{StaticResource BorderColor}"
                                BorderThickness="1"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <ItemsPresenter x:Name="ItemsPresenter" 
                                               KeyboardNavigation.DirectionalNavigation="Contained"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- Только при наведении на кнопку со стрелкой -->
                            <Trigger SourceName="ToggleButton" Property="IsMouseOver" Value="True">
                                <Setter TargetName="ArrowBorder" Property="Background" Value="#334155"/>
                                <Setter TargetName="ArrowPath" Property="Fill" Value="{StaticResource AccentColor}"/>
                            </Trigger>

                            <!-- При открытом комбобоксе -->
                            <Trigger Property="IsDropDownOpen" Value="True">
                                <Setter TargetName="ArrowPath" Property="Fill" Value="{StaticResource AccentColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <Border Grid.Row="0" Background="{StaticResource SecondaryColor}" Padding="16">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Button x:Name="ButtonBack" HorizontalAlignment="Left"
                                    Style="{StaticResource BackButtonStyle}"
                                    Click="ButtonBack_Click"
                                    VerticalAlignment="Center"
                                    MinWidth="120">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <materialDesign:PackIcon Kind="ArrowLeft" 
                                                           Width="20"
                                                           Height="20"
                                                           Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                                           VerticalAlignment="Center"
                                                           Margin="0,0,3,0"/>
                        <TextBlock Text="Назад" 
                                               VerticalAlignment="Center"
                                               Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                    </StackPanel>
                </Button>

                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="130,0,0,0">
                    <materialDesign:PackIcon Kind="AccountMultiple" Style="{StaticResource AccentIconStyle}"/>
                    <TextBlock Text="УПРАВЛЕНИЕ ТАБЕЛЕМ" 
                               Style="{StaticResource HeaderTextStyle}"
                               Margin="12,0,0,0"/>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Main Content -->
        <Border Grid.Row="1" Margin="16" Background="{StaticResource SecondaryColor}" CornerRadius="8">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Employee Selection Panel -->
                <Border Grid.Row="0" Background="#334155" CornerRadius="8" Margin="16" Padding="16">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <materialDesign:PackIcon Kind="AccountCircle" Style="{StaticResource AccentIconStyle}"/>
                            <TextBlock Text="Сотрудник:" 
                                       Style="{StaticResource HeaderTextStyle}"
                                       Margin="12,0,12,0"/>
                        </StackPanel>
                        <ComboBox x:Name="EmployeesComboBox"
                                  Grid.Column="1"
                                  
          ItemsSource="{Binding Employees}"
          SelectedItem="{Binding SelectedEmployee, Mode=TwoWay}"
          SelectionChanged="EmployeesComboBox_SelectionChanged"
          HorizontalAlignment="Left"
          MinWidth="200"
          VerticalAlignment="Center"
          Style="{StaticResource CustomEmployeeComboBoxStyle}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding FullName}" 
                                               FontSize="16"
                       TextTrimming="CharacterEllipsis"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>

                        <Button x:Name="SaveButton"
                                Grid.Column="2"
                                Content="Сохранить"
                                Style="{StaticResource PrimaryButtonStyle}"
                                Click="SaveButton_Click">
                            <Button.ToolTip>
                                <ToolTip Content="Сохранить изменения графика"/>
                            </Button.ToolTip>
                        </Button>
                        
                    </Grid>
                </Border>

                <!-- Timesheet Grid -->
                <Border Grid.Row="1" Margin="16" CornerRadius="8" BorderThickness="1" BorderBrush="{StaticResource BorderColor}">
                    <Grid>
                        <Grid.OpacityMask>
                            <VisualBrush Visual="{Binding ElementName=clipBorder}"/>
                        </Grid.OpacityMask>
                        <Border x:Name="clipBorder" CornerRadius="8" Background="{StaticResource SecondaryColor}"/>
                        <DataGrid x:Name="TimesheetGrid"
          ItemsSource="{Binding Timesheets}"
          Style="{StaticResource ModernDataGridStyle}"
          ColumnHeaderStyle="{StaticResource ModernDataGridColumnHeaderStyle}"
          RowStyle="{StaticResource ModernDataGridRowStyle}"
          CellStyle="{StaticResource ModernDataGridCellStyle}"
          Margin="0" 
          HorizontalAlignment="Stretch"
          HorizontalContentAlignment="Stretch"
          VerticalScrollBarVisibility="Auto"
          HorizontalScrollBarVisibility="Auto"
          AutoGenerateColumns="False"
          CanUserAddRows="False"
          CanUserDeleteRows="False"
          CanUserReorderColumns="False"
          CanUserResizeColumns="True"
          CanUserResizeRows="False"
          CanUserSortColumns="True"
          IsReadOnly="False"
          RowHeight="60"
          ColumnHeaderHeight="40"
          GridLinesVisibility="All"
          FontSize="14">

                            <DataGrid.Columns>
                                <!-- День (широкая колонка) -->
                                <DataGridTextColumn Header="День" 
                            Binding="{Binding Day}" 
                            Width="180" 
                            IsReadOnly="True">
                                    <DataGridTextColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" 
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                                                <materialDesign:PackIcon Kind="CalendarToday" 
                                                Style="{StaticResource AccentIconStyle}" 
                                                Margin="0,0,8,0"/>
                                                <TextBlock Text="{Binding}" 
                                   Style="{StaticResource SecondaryTextStyle}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTextColumn.HeaderTemplate>
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource BodyTextStyle}">
                                            <Setter Property="FontWeight" Value="SemiBold"/>
                                            <Setter Property="Foreground" Value="{StaticResource AccentColor}"/>
                                            <Setter Property="TextAlignment" Value="Left"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="Padding" Value="12,0"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <!-- Январь -->
                                <DataGridTemplateColumn Header="Январь" 
                               Width="120" 
                               MinWidth="110">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" 
                               Style="{StaticResource SecondaryTextStyle}" 
                               TextAlignment="Center"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0">
                                                <ComboBox 
                            ItemsSource="{Binding DataContext.Statuses, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                            SelectedValue="{Binding January, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValuePath="StatusCode"
                            DisplayMemberPath="StatusCode"
                            Style="{StaticResource DataGridComboBoxStyle}"
                            Margin="4"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Stretch">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding StatusCode}"  
                                               Padding="8,4"
                                                                      Foreground="White"
                                               TextWrapping="Wrap"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!-- Февраль -->
                                <DataGridTemplateColumn Header="Февраль" 
                               Width="120" 
                               MinWidth="110">
                                    <!-- Аналогично Январю -->
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0">
                                                <ComboBox 
                            ItemsSource="{Binding DataContext.Statuses, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                            SelectedValue="{Binding February, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValuePath="StatusCode"
                            DisplayMemberPath="StatusCode"
                            Style="{StaticResource DataGridComboBoxStyle}"
                            Margin="4">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding StatusCode}"
                                                                       Foreground="White"
                                               Padding="8,4"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!-- Март -->
                                <DataGridTemplateColumn Header="Март" 
                               Width="120" 
                               MinWidth="110">
                                    <!-- Аналогично Январю -->
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0">
                                                <ComboBox 
                            ItemsSource="{Binding DataContext.Statuses, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                            SelectedValue="{Binding March, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValuePath="StatusCode"
                            DisplayMemberPath="StatusCode"
                            Style="{StaticResource DataGridComboBoxStyle}"
                            Margin="4">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding StatusCode}" 
                                                                       Foreground="White"
                                               Padding="8,4"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!-- Апрель -->
                                <DataGridTemplateColumn Header="Апрель" 
                               Width="120" 
                               MinWidth="110">
                                    <!-- Аналогично Январю -->
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0">
                                                <ComboBox 
                            ItemsSource="{Binding DataContext.Statuses, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                            SelectedValue="{Binding April, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValuePath="StatusCode"
                            DisplayMemberPath="StatusCode"
                            Style="{StaticResource DataGridComboBoxStyle}"
                            Margin="4">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding StatusCode}" 
                                                                       Foreground="White"
                                               Padding="8,4"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!-- Май -->
                                <DataGridTemplateColumn Header="Май" 
                               Width="120" 
                               MinWidth="110">
                                    <!-- Аналогично Январю -->
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0">
                                                <ComboBox 
                            ItemsSource="{Binding DataContext.Statuses, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                            SelectedValue="{Binding May, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValuePath="StatusCode"
                            DisplayMemberPath="StatusCode"
                            Style="{StaticResource DataGridComboBoxStyle}"
                            Margin="4">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding StatusCode}"
                                                                       Foreground="White"
                                               Padding="8,4"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!-- Июнь -->
                                <DataGridTemplateColumn Header="Июнь" 
                               Width="120" 
                               MinWidth="110">
                                    <!-- Аналогично Январю -->
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0">
                                                <ComboBox 
                            ItemsSource="{Binding DataContext.Statuses, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                            SelectedValue="{Binding June, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValuePath="StatusCode"
                            DisplayMemberPath="StatusCode"
                            Style="{StaticResource DataGridComboBoxStyle}"
                            Margin="4">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding StatusCode}" 
                                                                       Foreground="White"
                                               Padding="8,4"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!-- Июль -->
                                <DataGridTemplateColumn Header="Июль" 
                               Width="120" 
                               MinWidth="110">
                                    <!-- Аналогично Январю -->
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0">
                                                <ComboBox 
                            ItemsSource="{Binding DataContext.Statuses, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                            SelectedValue="{Binding July, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValuePath="StatusCode"
                            DisplayMemberPath="StatusCode"
                            Style="{StaticResource DataGridComboBoxStyle}"
                            Margin="4">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding StatusCode}"
                                                                       Foreground="White"
                                               Padding="8,4"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!-- Август -->
                                <DataGridTemplateColumn Header="Август" 
                               Width="120" 
                               MinWidth="110">
                                    <!-- Аналогично Январю -->
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0">
                                                <ComboBox 
                            ItemsSource="{Binding DataContext.Statuses, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                            SelectedValue="{Binding August, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValuePath="StatusCode"
                            DisplayMemberPath="StatusCode"
                            Style="{StaticResource DataGridComboBoxStyle}"
                            Margin="4">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding StatusCode}" 
                                                                       Foreground="White"
                                               Padding="8,4"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!-- Сентябрь -->
                                <DataGridTemplateColumn Header="Сентябрь" 
                               Width="120" 
                               MinWidth="110">
                                    <!-- Аналогично Январю -->
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0">
                                                <ComboBox 
                            ItemsSource="{Binding DataContext.Statuses, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                            SelectedValue="{Binding September, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValuePath="StatusCode"
                            DisplayMemberPath="StatusCode"
                            Style="{StaticResource DataGridComboBoxStyle}"
                            Margin="4">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding StatusCode}" 
                                                                       Foreground="White"
                                               Padding="8,4"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!-- Октябрь -->
                                <DataGridTemplateColumn Header="Октябрь" 
                               Width="120" 
                               MinWidth="110">
                                    <!-- Аналогично Январю -->
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0">
                                                <ComboBox 
                            ItemsSource="{Binding DataContext.Statuses, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                            SelectedValue="{Binding October, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValuePath="StatusCode"
                            DisplayMemberPath="StatusCode"
                            Style="{StaticResource DataGridComboBoxStyle}"
                            Margin="4">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding StatusCode}" 
                                                                       Foreground="White"
                                               Padding="8,4"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!-- Ноябрь -->
                                <DataGridTemplateColumn Header="Ноябрь" 
                               Width="120" 
                               MinWidth="110">
                                    <!-- Аналогично Январю -->
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0">
                                                <ComboBox 
                            ItemsSource="{Binding DataContext.Statuses, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                            SelectedValue="{Binding November, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValuePath="StatusCode"
                            DisplayMemberPath="StatusCode"
                            Style="{StaticResource DataGridComboBoxStyle}"
                            Margin="4">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding StatusCode}" 
                                                                       Foreground="White"
                                               Padding="8,4"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!-- Декабрь -->
                                <DataGridTemplateColumn Header="Декабрь" 
                               Width="120" 
                               MinWidth="110">
                                    <!-- Аналогично Январю -->
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0">
                                                <ComboBox 
                            ItemsSource="{Binding DataContext.Statuses, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                            SelectedValue="{Binding December, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SelectedValuePath="StatusCode"
                            DisplayMemberPath="StatusCode"
                            Style="{StaticResource DataGridComboBoxStyle}"
                            Margin="4">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding StatusCode}" 
                                                                       Foreground="White"
                                               Padding="8,4"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </Border>
            </Grid>
        </Border>
    </Grid>
</Page>